service: campeonato-manager

configValidationMode: off

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  memorySize: 512
  timeout: 30
  stage: ${opt:stage, 'dev'}

  deploymentBucket:
    name: campeonato-manager-deployment-bucket
    blockPublicAccess: true
    versioning: true
    serverSideEncryption: AES256

  environment:
    NODE_ENV: ${self:provider.stage}
    MONGO_URI: ${env:MONGO_URI}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - lambda:*
            - apigateway:*
            - logs:*
            - iam:PassRole
            - s3:*
          Resource: '*'

build:
  esbuild: false

plugins:
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    target: node18
    platform: node
    concurrency: 10

functions:
  startMatch:
    handler: src/presentation/lambdas/startMatchHandler.handler
    events:
      - http:
          path: matches/{matchId}/start
          method: post
          cors: true

  startSecondHalf:
    handler: src/presentation/lambdas/startSecondHalfHandler.handler
    events:
      - http:
          path: matches/{matchId}/start-second-half
          method: post
          cors: true

  closeMatch:
    handler: src/presentation/lambdas/closeMatchHandler.handler
    events:
      - http:
          path: matches/{matchId}/close
          method: post
          cors: true

  registerEvent:
    handler: src/presentation/lambdas/registerMatchEventHandler.handler
    events:
      - http:
          path: matches/{matchId}/events
          method: post
          cors: true

  voteCraque:
    handler: src/presentation/lambdas/voteCraqueDaPartidaHandler.handler
    events:
      - http:
          path: matches/{matchId}/vote
          method: post
          cors: true

  syncOfflineData:
    handler: src/presentation/lambdas/syncOfflineDataHandler.handler
    events:
      - http:
          path: matches/{matchId}/sync-offline
          method: post
          cors: true

  getClassification:
    handler: src/presentation/lambdas/getClassificationHandler.handler
    events:
      - http:
          path: classification
          method: get
          cors: true

  getTopScorers:
    handler: src/presentation/lambdas/getTopScorersHandler.handler
    events:
      - http:
          path: top-scorers
          method: get
          cors: true

  getBestGoalkeeper:
    handler: src/presentation/lambdas/getBestGoalkeeperHandler.handler
    events:
      - http:
          path: best-goalkeepers
          method: get
          cors: true

  getPublicMatchDetails:
    handler: src/presentation/lambdas/getPublicMatchDetailsHandler.handler
    events:
      - http:
          path: matches/{matchId}/details
          method: get
          cors: true

  getMatchesTable:
    handler: src/presentation/lambdas/getMatchesTableHandler.handler
    events:
      - http:
          path: matches-table
          method: get
          cors: true
